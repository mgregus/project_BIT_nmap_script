import argparse
import ipaddress
import subprocess
import re

def valid_ipv4(ip_addr):
    if ip_addr.find('/') > 0:
        try:
            temp2 = ipaddress.ip_network(ip_addr)
            return True     
        except ValueError:
            return False
    else:        
        try:
            temp2 = ipaddress.ip_address(ip_addr)
            return True
        except ValueError:
            return False

def invalid_range(port_number):
    if (int(port_number) < 1 or int(port_number) > 65535):
        return True

    return False



def valid_port(port):
    if port == "-":
    	return True
    
    pattern = re.compile(r"^\d{1,5}$", re.IGNORECASE)
    if pattern.match(port):
        if (invalid_range(port)):
            return False
        return True

    pattern = re.compile(r"^\d{1,5}-\d{1,5}$", re.IGNORECASE)
    if pattern.match(port):
        first_port = port.split('-')[0]
        second_port = port.split('-')[1]
        if (invalid_range(first_port) or invalid_range(second_port)):
            return False
        return True
        
    return False


def process_arguments():
    parser = argparse.ArgumentParser(prog = 'Custom nmap vuln scanner', description = 'Program checks whether a host is vulnerable for CVE-2022-32073')
    parser.add_argument('-a', '--address', required=True,type=str, metavar="IP adress/range", help="Enter the IP adress of the target machine or range of IPs to be scanned") 
    parser.add_argument('-p', '--port', required=False, type=str,metavar="Port", help="Enter the Port to be scanned. Default scans all ports", default="-")    
    arguments = parser.parse_args()
    
    if ( not valid_ipv4(arguments.address)):
    	print('IP: "'+arguments.address+'" is invalid. Please enter valid IPv4 address or network range.')
    
    if ( not valid_port(arguments.port)):
    	print('Port number: "'+str(arguments.port)+'" is invalid. Please enter valid port number or range.')

    return arguments

def print_output(output_str):
    for line in output_str.splitlines():
        if "latency" not in line and "report" not in line and "nmap.org" not in line: 
            print(line)    
    print("")
    

def is_vulnerable(scan_result):
    output = scan_result.stdout.decode("utf-8")
    if "vulnerable" in output:
    	print_output(output)    	
    	print("Target service on the target host is RUNNING a service vulnerable for CVE-2022-32073 !!!")
    	print("")
    else:
        print_output(output)
        print("Target service on the target host is NOT running a service vulnerable for CVE-2022-32073.")
        print("")
    
    pass
     

def main():
    args = process_arguments()
    port_specif = "-p" + args.port
    
    print('Running a scan on "'+args.address+':'+str(args.port)+'" for CVE-2022-32073')
        
    try:
        compl_process = subprocess.run( ["nmap", "--script","wolf_ssh.nse",port_specif,args.address], capture_output=True, check=True)        
        is_vulnerable(compl_process)
    except:
    	print("Failed to execute nmap scan!")
    	return 1
    	
    print('Scan succesfully completed!')
    
    return 0


if __name__ == '__main__':
    main()
